(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $__last_offset (mut i32) (i32.const 1043))
  (global $__available_size (mut i32) (i32.const -1))
  (global $@stack (mut i32) (i32.const 8))
  (memory (export "memory") 1)
  (data (i32.const 1024) "%d * %d * %d = %d\0A\00")
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $a i32)
    (local $b i32)
    (local.set $@stack_entry (global.get $@stack))
    (local.set $a (call $malloc (i32.const 12)))
    (i32.store align=4 (local.get $a) (i32.const 15))
    (local.set $b (i32.add (local.get $a) (i32.const 4)))
    (i32.store align=4 (local.get $b) (i32.const 13))
    (i32.store align=4 (i32.add (local.get $a) (i32.const 8)) (i32.const 11))
    (i32.store align=4 (i32.add (local.get $a) (i32.const 12)) (i32.mul (i32.mul (i32.load align=4 (local.get $a)) (i32.load align=4 (local.get $b))) (i32.load align=4 (i32.add (local.get $a) (i32.const 8)))))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (i32.load align=4 (local.get $a))))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (i32.load align=4 (i32.add (local.get $a) (i32.const 4)))))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (i32.load align=4 (i32.add (local.get $a) (i32.const 8)))))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (i32.load align=4 (i32.add (local.get $a) (i32.const 12)))))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 24)))
    (call $printf (i32.const 1024) (global.get $@stack))
    (global.set $@stack (local.get $@stack_entry))
    (i32.const 0))
  (func $malloc (param $size i32) (result i32)
    (local $res i32)
    (local $pages i32)
    (if (i32.lt_s (global.get $__available_size) (i32.const 0))
      (then
        (global.set $__available_size (i32.mul (i32.const 64000) (memory.size)))))
    (global.set $__last_offset (i32.add (i32.mul (i32.div_s (i32.sub (global.get $__last_offset) (i32.const 1)) (i32.const 8)) (i32.const 8)) (i32.const 8)))
    (local.set $res (global.get $__last_offset))
    (global.set $__last_offset (i32.add (global.get $__last_offset) (local.get $size)))
    (if (i32.gt_s (global.get $__last_offset) (global.get $__available_size))
      (then
        (local.set $pages (i32.add (i32.const 1) (i32.div_s (global.get $__last_offset) (i32.const 64000))))
        (drop (memory.grow (i32.sub (local.get $pages) (memory.size))))
        (global.set $__available_size (i32.mul (i32.const 64000) (local.get $pages)))))
    (local.get $res)))
