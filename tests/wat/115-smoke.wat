(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $__last_offset (mut i32) (i32.const 1053))
  (global $__available_size (mut i32) (i32.const -1))
  (global $@stack (mut i32) (i32.const 8))
  (memory (export "memory") 1)
  (data (i32.const 1024) "2^%d = %ld, as string: '%s'\0A\00")
  (func $long_to_string (param $a i64) (result i32)
    (local $@stack_entry i32)
    (local $N i32)
    (local $buf i32)
    (local $n i32)
    (local $ret i32)
    (local $d i64)
    (local.set $@stack_entry (global.get $@stack))
    (local.set $N (i32.const 20))
    (local.set $buf (global.get $@stack))
    (global.set $@stack (i32.add (i32.const 8) (i32.mul (i32.const 8) (i32.div_s (i32.sub (i32.add (global.get $@stack) (local.get $N)) (i32.const 1)) (i32.const 8)))))
    (local.set $n (local.get $N))
    (loop $@block_1_continue
      (local.set $d (i64.rem_u (local.get $a) (i64.const 10)))
      (local.set $a (i64.div_u (local.get $a) (i64.const 10)))
      (local.set $n (i32.sub (local.get $n) (i32.const 1)))
      (i32.store8 align=1 (i32.add (local.get $buf) (local.get $n)) (i32.add (i32.const 48) (i32.wrap_i64 (local.get $d))))
      (br_if $@block_1_continue (i64.gt_u (local.get $a) (i64.const 0))))
    (local.set $ret (call $malloc (i32.add (i32.sub (local.get $N) (local.get $n)) (i32.const 1))))
    (memory.copy (local.get $ret) (i32.add (local.get $buf) (local.get $n)) (i32.sub (local.get $N) (local.get $n)))
    (i32.store8 align=1 (i32.add (local.get $ret) (i32.sub (local.get $N) (local.get $n))) (i32.const 0))
    (global.set $@stack (local.get $@stack_entry))
    (local.get $ret))
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $n i32)
    (local $a i64)
    (local.set $@stack_entry (global.get $@stack))
    (block $@block_1_break
      (local.set $a (i64.const 1))
      (loop $@block_1_continue
        (br_if $@block_1_break (i32.ge_s (local.get $n) (i32.const 64)))
        (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (local.get $n)))
        (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
        (i64.store align=8 (global.get $@stack) (local.get $a))
        (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
        (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (call $long_to_string (local.get $a))))
        (global.set $@stack (i32.sub (global.get $@stack) (i32.const 16)))
        (call $printf (i32.const 1024) (global.get $@stack))
        (local.set $a (i64.mul (local.get $a) (i64.const 2)))
        (local.set $n (i32.add (local.get $n) (i32.const 1)))
        (br $@block_1_continue)))
    (global.set $@stack (local.get $@stack_entry))
    (i32.const 0))
  (func $malloc (param $size i32) (result i32)
    (local $res i32)
    (local $pages i32)
    (if (i32.lt_s (global.get $__available_size) (i32.const 0))
      (then
        (global.set $__available_size (i32.mul (i32.const 64000) (memory.size)))))
    (global.set $__last_offset (i32.add (i32.mul (i32.div_s (i32.sub (global.get $__last_offset) (i32.const 1)) (i32.const 8)) (i32.const 8)) (i32.const 8)))
    (local.set $res (global.get $__last_offset))
    (global.set $__last_offset (i32.add (global.get $__last_offset) (local.get $size)))
    (if (i32.gt_s (global.get $__last_offset) (global.get $__available_size))
      (then
        (local.set $pages (i32.add (i32.const 1) (i32.div_s (global.get $__last_offset) (i32.const 64000))))
        (drop (memory.grow (i32.sub (local.get $pages) (memory.size))))
        (global.set $__available_size (i32.mul (i32.const 64000) (local.get $pages)))))
    (local.get $res)))
