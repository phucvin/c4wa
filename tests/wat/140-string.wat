(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $@stack (mut i32) (i32.const 8))
  (memory (export "memory") 1)
  (data (i32.const 1024) "Hello!\00String <%s> consists of %d characters: \00'%c'\00, \00.\0A\00")
  (func $strlen (param $str i32) (result i32)
    (local $n i32)
    (loop $@block_1_continue
      (local.set $str (i32.add (local.get $str) (i32.const 1)))
      (local.set $n (i32.add (local.get $n) (i32.const 1)))
      (br_if $@block_1_continue (i32.load8_s align=1 (local.get $str))))
    (local.get $n))
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $hello i32)
    (local $len i32)
    (local.set $@stack_entry (global.get $@stack))
    (local.set $hello (i32.const 1024))
    (local.set $len (i32.const 57))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (local.get $hello)))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (call $strlen (local.get $hello))))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 8)))
    (call $printf (i32.const 1031) (global.get $@stack))
    (loop $@block_1_continue
      (i64.store align=8 (global.get $@stack) (i64.extend_i32_s (i32.load8_s align=1 (local.get $hello))))
      (call $printf (i32.const 1071) (global.get $@stack))
      (local.set $hello (i32.add (local.get $hello) (i32.const 1)))
      (if (i32.ne (i32.load8_s align=1 (local.get $hello)) (i32.const 0))
        (then
          (call $printf (i32.const 1076) (global.get $@stack))))
      (br_if $@block_1_continue (i32.ne (i32.load8_s align=1 (local.get $hello)) (i32.const 0))))
    (call $printf (i32.const 1079) (global.get $@stack))
    (global.set $@stack (local.get $@stack_entry))
    (i32.const 0)))
